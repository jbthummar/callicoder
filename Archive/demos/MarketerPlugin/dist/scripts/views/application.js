!function (e) { "use strict"; var i = Backbone.View.extend({ _elmPageWidth: null, _elmPageHeight: null, _elmPageContainer: null, _elmToolbarContainer: null, _toolbar: null, _boxDialogView: null, _arrViews: [], initialize: function () { this._arrViews = [], this.precacheElements(), this.render(), this._attachEvents(), window.this2 = this }, precacheElements: function () { this._elmPageWidth = this.$("#page-width"), this._elmPageHeight = this.$("#page-height"), this._elmPageContainer = this.$("#wrapper") }, render: function () { this._createToolbar(), this._createBoxDialog() }, _createToolbar: function () { this._elmToolbarContainer = $("<div>").appendTo(this._elmPageContainer), this._toolbar = new e.ToolbarView({ elmWholeContainment: this._elmPageContainer, el: this._elmToolbarContainer }), this._elmPageContainer.append(this._toolbar.$el) }, _createBoxDialog: function () { this._boxDialogView = new e.BoxDialogView({ containment: this._elmPageContainer }), this._elmPageContainer.append(this._boxDialogView.$el), this._boxDialogView.attachEvents(), this._boxDialogView.closeDialog() }, _attachEvents: function () { this._elmPageWidth.change($.proxy(this.onWidthChange, this)), this._elmPageHeight.change($.proxy(this.onHeightChange, this)), this._createDroppable() }, onWidthChange: function () { var e = this._elmPageWidth.val(); $.isNumeric(e) && e >= this.model.get("minWidth") && e <= this.model.get("maxWidth") && this._elmPageContainer.width(e) }, onHeightChange: function () { var e = this._elmPageHeight.val(); $.isNumeric(e) && e >= this.model.get("minHeight") && e <= this.model.get("maxHeight") && this._elmPageContainer.height(e) }, _createDroppable: function () { var e = this; this._elmPageContainer.droppable({ accept: "." + this._toolbar.idPrefix + "-icon-image", over: function () { }, drop: function (i, t) { e.onTileDropped(i, t) } }) }, onTileDropped: function (e, i) { var t = i.draggable.data(), n = t.type; switch (n) { case "box": this.onBoxDropped(e, i) } }, onBoxDropped: function (t) { var n, o = this._elmPageContainer.offset(), a = t.clientX, l = t.clientY, h = a - o.left, s = l - o.top, r = { left: h, top: s }; n = new e.BoxView({ position: r, containment: this._elmPageContainer, id: "view-" + this._arrViews.length, model: new MarketerPlugin.Models.BoxModel }), this._elmPageContainer.append(n.$el), n.attachEvents(), this._arrViews.push(n), this.listenTo(n, i.Events.OnViewClick, $.proxy(this.onViewClick, this)) }, onViewClick: function (e) { this._boxDialogView.setModel(e.model), this._boxDialogView.openDialog() } }, { Events: { OnViewClick: "OnViewClick" } }); e.ApplicationView = i }(MarketerPlugin.Views);