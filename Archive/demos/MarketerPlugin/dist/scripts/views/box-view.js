!function (e) { "use strict"; var t = Backbone.View.extend({ _elmContainmant: null, initialize: function (e) { this._elmContainmant = e.containment, this.render(e) }, render: function (e) { var t = this.model, o = e.position; this.$el.addClass("box-view-container"), this.$el.attr({ id: e.id }), this.$el.css({ left: o.left, top: o.top, "border-color": t.get("border-color"), "background-color": t.get("background-color"), "border-style": t.get("border-style"), "border-width": t.get("border-width"), "border-radius": t.get("border-radius") }) }, attachEvents: function () { this._createDraggable(), this._createResizable(), this.$el.on("dblclick", $.proxy(this.onClick, this)), this.listenTo(this.model, "change:border-color", $.proxy(this.onChangeBorderColor, this)), this.listenTo(this.model, "change:background-color", $.proxy(this.onChangeBackgroundColor, this)), this.listenTo(this.model, "change:border-style", $.proxy(this.onChangeBorderStyle, this)), this.listenTo(this.model, "change:border-width", $.proxy(this.onChangeBorderWidth, this)), this.listenTo(this.model, "change:border-radius", $.proxy(this.onChangeBorderRadius, this)) }, onChangeBorderColor: function () { this.$el.css({ "border-color": this.model.get("border-color") }) }, onChangeBackgroundColor: function () { this.$el.css({ "background-color": this.model.get("background-color") }) }, onChangeBorderStyle: function () { this.$el.css({ "border-style": this.model.get("border-style") }) }, onChangeBorderWidth: function () { this.$el.css({ "border-width": this.model.get("border-width") }) }, onChangeBorderRadius: function () { this.$el.css({ "border-radius": this.model.get("border-radius") + "px" }) }, _createDraggable: function () { this.$el.draggable({ containment: this._elmContainmant, revert: !1 }) }, _createResizable: function () { this.$el.resizable({ containment: this._elmContainmant, handles: "n, e, s, w" }) }, onClick: function () { this.trigger(MarketerPlugin.Views.ApplicationView.Events.OnViewClick, this) } }, {}); e.BoxView = t }(MarketerPlugin.Views);